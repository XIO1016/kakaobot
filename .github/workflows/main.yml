name: Build APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - name: Create gradle wrapper
      run: |
        # Gradle Wrapper 생성
        mkdir -p gradle/wrapper
        
        cat > gradle/wrapper/gradle-wrapper.properties << 'EOF'
        distributionBase=GRADLE_USER_HOME
        distributionPath=wrapper/dists
        distributionUrl=https\://services.gradle.org/distributions/gradle-7.0-bin.zip
        zipStoreBase=GRADLE_USER_HOME
        zipStorePath=wrapper/dists
        EOF
        
        # gradlew 스크립트 생성
        cat > gradlew << 'EOF'
        #!/usr/bin/env sh
        exec gradle "$@"
        EOF
        
        chmod +x gradlew
    
    - name: Build with Gradle
      run: |
        # Gradle 다운로드 및 실행
        wget https://services.gradle.org/distributions/gradle-7.0-bin.zip
        unzip -q gradle-7.0-bin.zip
        ./gradle-7.0/bin/gradle assembleDebug
      
    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: app-debug
        path: app/build/outputs/apk/debug/app-debug.apk
        
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.${{ github.run_number }}
        release_name: Release v1.0.${{ github.run_number }}
        draft: false
        prerelease: false
        
    - name: Upload Release APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app/build/outputs/apk/debug/app-debug.apk
        asset_name: KakaoAutoSender.apk
        asset_content_type: application/vnd.android.package-archive
